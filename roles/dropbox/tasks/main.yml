- name: Check if this role has already run to completion
  stat:
    path: "~{{ system_username }}/Dropbox"
  register: dropbox_dir

- name: Install, configure and start Dropbox
  block:
    - name: Setup Dropbox
      include_role:
        name: oefenweb.dropbox

    - name: dropbox | Install Dropbox
      shell: wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
      args:
        chdir: "~{{ system_username }}"
        creates: "{{ system_username }}/.dropbox-dist/dropboxd"

    - name: dropbox | Copy the unit file
      template:
        src: dropbox.service
        dest: "~{{ system_username }}/.config/systemd/user/dropbox.service"

    - name: Make systemd dir for enabled services
      file:
        path: "~{{ system_username }}/.config/systemd/user/multi-user.target.wants"
        state: directory

    - name: link service file
      file:
        src: "~{{ system_username }}/.config/systemd/user/emacs.service"
        path: "~{{ system_username }}/.config/systemd/user/multi-user.target.wants/dropbox.service"
        state: link
        force: true

    - name: systemd reread configs
      become: yes
      become_user: "{{ system_username }}"
      systemd:
        scope: user
        daemon_reload: yes

    - name: start the dropbox service
      become: yes
      become_user: "{{ system_username }}"
      systemd:
        scope: user
        name: dropbox
        enabled: yes

    - name: dropbox | Check dropboxd status
      command: dropbox status
      register: status

    - name: dropbox | Start dropboxd
      shell: dropbox start >/dev/null 2>&1
      when: status.stdout == "Dropbox isn't running!"

    - name: dropbox | add exclude
      shell: "cat {{ repo_dir }}/roles/dropbox/files/excluded.txt | xargs dropbox exclude add"

    - name: dropbox | mk dropbox dir
      file:
        path: "~{{ system_username }}/Dropbox"
        state: directory
  when: dropbox_dir.stat.isdir is defined and dropbox_dir.stat.isdir
